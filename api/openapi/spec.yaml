openapi: 3.0.3
info:
  title: Catalog of Courses
  description: Simple REST API - test task for Yalantis Python School
  contact:
    name: Oleksandr Gryshchenko
    email: grisov.dev@mailnull.com
    url: https://bit.ly/39LSq74
  license:
    name: General Public License version 2.0
    url: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html
  termsOfService: https://github.com/grisov/catalog_of_courses
  version: 1.0.0
servers:
- description: Production server
  url: https://localhost:{port}/api/{version}
  variables:
    port:
      default: "80"
      description: Production server port
      enum:
      - "80"
      - "8080"
    version:
      default: v1
      description: First release of REST API
tags:
- name: add
  description: Add a new training course to the database
- name: search
  description: Get a list of all training courses that meet the specified parameters
- name: general
  description: General operations on one course (get data, change, delete)

paths:
  /add:
    get:
      summary: Add new course via a URL parameter
      description: Add a new training course to the database using GET-method
      operationId: add_get
      parameters:
      - $ref: '#/components/parameters/courseNameParam'
        required: true
      - $ref: '#/components/parameters/startDateParam'
        required: true
      - $ref: '#/components/parameters/endDateParam'
        required: true
      - $ref: '#/components/parameters/amountParam'
        required: true
      responses:
        "200":
          $ref: '#/components/responses/successCourse'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - add
      x-openapi-router-controller: api.controllers.add

    post:
      summary: Add new course via a request body
      description: Add a new training course to the database using POST-method
      operationId: add_post
      requestBody:
        description: A set of data describing the training course
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        "200":
          $ref: '#/components/responses/successCourse'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - add
      x-openapi-router-controller: api.controllers.add

  /search:
    get:
      summary: Searching of courses on the properties specified in URL
      description: Search for a training course by name or filter the list by specified dates
      operationId: search_get
      parameters:
      - $ref: '#/components/parameters/courseNameParam'
        required: false
      - $ref: '#/components/parameters/startDateParam'
        required: false
      - $ref: '#/components/parameters/endDateParam'
        required: false
      responses:
        "200":
          $ref: '#/components/responses/successList'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - search
      x-openapi-router-controller: api.controllers.search

    post:
      summary: Searching of courses on the properties specified in request body
      description: Search for a training course by name or filter the list by specified dates
      operationId: search_post
      requestBody:
        description: Course name to search for or dates to filter the results
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchData'
      responses:
        "200":
          $ref: '#/components/responses/successList'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - search
      x-openapi-router-controller: api.controllers.search

  /course/{cid}:
    parameters:
    - name: cid
      in: path
      required: true
      description: The ID of the Training course in the database
      style: simple
      explode: false
      schema:
        $ref: '#/components/schemas/CourseID'
      examples:
        cid:
          value: 7

    get:
      summary: Detailed information about the training course
      description: Complete information about the training course with the specified ID
      operationId: get_details
      responses:
        "200":
          $ref: '#/components/responses/successCourse'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - general
      x-openapi-router-controller: api.controllers.general

    put:
      summary: Update a course with the specified ID
      description: Change the properties of the training course in the database
      operationId: update
      requestBody:
        description: A set of data describing the training course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        "200":
          $ref: '#/components/responses/successCourse'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - general
      x-openapi-router-controller: api.controllers.general

    delete:
      summary: Delete a course with the specified ID
      description: Delete a training course from the database
      operationId: remove
      responses:
        "200":
          $ref: '#/components/responses/successCourse'
        default:
          $ref: '#/components/responses/unexpectedError'
      tags:
      - general
      x-openapi-router-controller: api.controllers.general

components:
  schemas:
    CourseName:
      type: string
      minLength: 2
      description: Name of the course
    CourseStart:
      type: string
      format: date
      description: Start date of the course
    CourseEnd:
      type: string
      format: date
      description: Graduation date of the course
    CourseAmount:
      type: integer
      format: int8
      minimum: 1
      maximum: 255
      exclusiveMinimum: False
      exclusiveMaximum: False
      description: Number of lectures that make up the training course
    CourseID:
      type: integer
      format: int32
      default: -1
      description: Course ID in the database, value -1 if there is no corresponding record in the DB
    Course:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CourseName'
        start:
          $ref: '#/components/schemas/CourseStart'
        end:
          $ref: '#/components/schemas/CourseEnd'
        amount:
          $ref: '#/components/schemas/CourseAmount'
        id:
          $ref: '#/components/schemas/CourseID'
      required:
      - name
      - start
      - end
      - amount
    SearchData:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/CourseName'
        start:
          $ref: '#/components/schemas/CourseStart'
        end:
          $ref: '#/components/schemas/CourseEnd'
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
          description: Error code
        title:
          type: string
          description: Common title of the error
        detail:
          type: string
          description: Detailed description of the error
        type:
          type: string
          description: Error type
      required:
      - status
      - title

  parameters:
    courseNameParam:
      name: name
      in: query
      description: Name of the training course
      allowEmptyValue: false
      allowReserved: true
      style: form
      explode: false
      schema:
        $ref: '#/components/schemas/CourseName'
      examples:
        name:
          value: "Technologies"
    startDateParam:
      name: start
      in: query
      description: Start date of the training course
      allowEmptyValue: false
      allowReserved: true
      style: form
      explode: false
      schema:
        $ref: '#/components/schemas/CourseStart'
      examples:
        start:
          value: "2021-06-12"
    endDateParam:
      name: end
      in: query
      description: End date of the training course
      allowEmptyValue: false
      allowReserved: true
      style: form
      explode: false
      schema:
        $ref: '#/components/schemas/CourseEnd'
      examples:
        end:
          value: "2021-09-17"
    amountParam:
      name: amount
      in: query
      description: Number of lectures that make up the training course
      allowEmptyValue: false
      allowReserved: true
      style: form
      explode: false
      schema:
        $ref: '#/components/schemas/CourseAmount'
      examples:
        amount:
          value: 20

  responses:
    successCourse:
      description: Complete information about the training course
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Course'
    successList:
      description: List of courses with complete information about each of them
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Course'
    unexpectedError:
      description: Details about an error that occurred during data processing
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
